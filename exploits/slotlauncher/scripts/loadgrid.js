var hasImage = [false, false, false, false, false,
                false, false, false, false, false,
                false, false, false, false, false];
var hasPayload = [false, false, false, false, false,
                  false, false, false, false, false,
                  false, false, false, false, false];

function loadGrid ()
{
    // print opening message
    console.log ("/-----------------------------------------------------");
    console.log ("Loading icons...");
    console.log ("/-----------------------------------------------------");

    // for every row
    for (var row = 1; row < 4; row++)
    {
        // and every column in each of those rows
    	for (var column = 1; column < 6; column++)
    	{
            var slotID;
            // each icon block has its own ID
            // 1  2  3  4  5  - Easy, just use the column
            // 6  7  8  9  10 - +5
            // 11 12 13 14 15 - +10
            // that logic is used to compute the slotid here based off off
            // the column and row, which we alrady know
    		if (row === 2)
    			slotID = column + 5;
    		else if (row === 3)			
    			slotID = column + 10;
    		else
    			slotID = column;

            // load the image from its slot folder
            // we pass the message as a parameter instead of printing it because
            // of a delay talked about later
        	loadImage (slotID, "Loading the image for row " + row + ", column " + column + ", slot " + slotID + ".");
    	}
    }

    // print bin start message
    console.log ("/-----------------------------------------------------");
    console.log ("Loading payloads.");
    console.log ("/-----------------------------------------------------");

    // this for loop will load the bins
    // its simpler than resetting the paremeters for the first loop
    // for every row
    for (var row = 1; row < 4; row++)
    {
        // and every column in each of those rows
        for (var column = 1; column < 6; column++)
        {
            // same deal as before
            var slotID;
            if (row === 2)
                slotID = column + 5;
            else if (row ===3)          
                slotID = column + 10;
            else
                slotID = column;

            if (!useMP4)
                // nothing new here either
                loadBIN (slotID, "Loading the binary for row " + row + ", column " + column + ", slot " + slotID + ".");
            
            else
                // nothing new here either
                loadMP4 (slotID, "Loading the MP4 for row " + row + ", column " + column + ", slot " + slotID + ".");
        }
    }
}

function wipeGrid ()
{
    // reset count
    payloadLoadCount = 0;
    imgLoadCount = 0;

    // reset loading
    payloadLoadingFinished = false;
    imageLoadingFinished = false;

    //reset the arrays
    
    for (var row = 1; row < 4; row++)
    {
        for (var column = 1; column < 6; column++)
        {
            // same deal as before
            var slotID;
            if (row === 2)
                slotID = column + 5;
            else if (row ===3)          
                slotID = column + 10;
            else
                slotID = column;

            // remove images
            document.getElementById (slotID).removeAttribute ("src");
            // remove links
            document.getElementById ("icon-" + slotID).removeAttribute ("href");
        }
    }
}

// this will keep track of how many payloads have loaded, reguardless of if they were found
// or not
// i'm doing this because due to the httprequest, the slots always load
// out of order
var imgLoadCount = 0;
var imageLoadingFinished = false;

// find and set an image
function loadImage (slotID, loadString) 
{
    // init http
	var httpRequest = new XMLHttpRequest();
    // this is the path we'll fill
	var imgPath;
    // this will be triggered when a state change occurs in the request
    httpRequest.onreadystatechange = function()
    {
        // if the request is ready
    	if (httpRequest.readyState == 4 && httpRequest.status == 200) 
    	{
            // print the log message
            // we do this here instead of the for loop because this function won't
            // be triggered until the for loop has gone onto the next slot, resulting in
            // delayed messages
            // fill the path with the response
    		imgPath = httpRequest.responseText;
            // log the response recieved
            
            // if 404
    		if (imgPath.substring(0, 5) === "Error")
            {
                // set empty background
                document.getElementById ("icon-" + slotID).style.backgroundImage = "url('images/icon-empty-background.png')";

                //mark image as gone
                hasImage[slotID] = false;
            }

            // if found
    		else
            {
                // hide 
                document.getElementById ("icon-" + slotID).style.visibility = "hidden";

                // set background as borders
                document.getElementById ("icon-" + slotID).style.backgroundImage = 'url(images/icon-background.png)';
                // set the image
    			document.getElementById(slotID).src = imgPath;

                document.getElementById ("icon-" + slotID).style.visibility = "visible";

                //mark image as in
                hasImage[slotID] = true;
    		}

            // this image is done
            imgLoadCount++;

            //wait until all 15 images have loaded
            if (imgLoadCount === 15)
            {
                // mark the images as done
                imageLoadingFinished = true;
                
                // check for missing images/bins
                checkForMissing ();
            }
        }
    }
    // find an image in the current slot folder
    httpRequest.open("GET", "getfilebyextension.php?folder=slots/"+slotID+"&ext=png");
    httpRequest.send();
}

var payloadLoadCount = 0;
var payloadLoadingFinished = false;

// find and link to a .bin
function loadBIN (slotID, loadString) 
{
    // init http
    var httpRequest = new XMLHttpRequest();
    // this is the path we'll fill
    var binPath;
    // this will be triggered when a state change occurs in the request
    httpRequest.onreadystatechange = function()
    {
        // if the request is ready
        if (httpRequest.readyState == 4 && httpRequest.status == 200) 
        {
            console.log (loadString);

            // fill the path with the response
            binPath = httpRequest.responseText;

            // if not 404
            if (binPath.substring(0, 5) !== "Error")
            {
                console.log ("Found BIN @ " + binPath)

                // set the bin link
                document.getElementById("icon-" + slotID).href = "../loadBIN.php?payload=" + binPath;

                //mark bin as in
                hasPayload[slotID] = true;

            }

            // nope, couldn't find the bin for this slot
            else
            {
                console.log ("404 not found.");

                //mark bin as out
                hasPayload[slotID] = false;
            }

            // this slot is finished
            payloadLoadCount++;
            //wait until all 15 images have loaded
            if (payloadLoadCount >= 15)
            {
                // mark the bins as done
                payloadLoadingFinished = true;

                // fix missing images/bins
                checkForMissing ();
            }
        }
    }
    httpRequest.open ("GET", "getfilebyextension.php?folder=slots/"+slotID+"&ext=bin");
    httpRequest.send ();
}

function loadMP4 (slotID, loadString)
{
    // init http
    var httpRequest = new XMLHttpRequest();
    // this is the path we'll fill
    var mp4Path;
    // this will be triggered when a state change occurs in the request
    httpRequest.onreadystatechange = function()
    {
        // if the request is ready
        if (httpRequest.readyState == 4 && httpRequest.status == 200) 
        {
            // fill the path with the response
            mp4Path = httpRequest.responseText;
            //print message
            console.log (loadString);

            // if not 404
            if (mp4Path.substring(0, 5) !== "Error")
            {
                console.log ("Found MP4 @ " + mp4Path);

                if (mp4Path.indexOf(' ') !== -1)
                    alert("Please remove the spaces in this file name: " + mp4Path + ". Launching filenames ");

                // set the bin link
                document.getElementById("icon-" + slotID).href = "../loadMP4.php?payload=" + mp4Path;

                // mark payload as in
                hasPayload[slotID] = true;
            }
            // still couldn't find anything
            else
            {
                console.log ("404 not found.");

                // mark payload as absent
                hasPayload[slotID] = false;
            }
            // this slot's payload is done, reguardless if it could be found or not
            payloadLoadCount++;
            //wait until all 15 images have loaded
            if (payloadLoadCount >= 15)
            {
                // print finish message
                console.log ("/-----------------------------------------------------");
                console.log ("The MP4s have finished loading.");
                console.log ("/-----------------------------------------------------");

                // mark the bins as done
                payloadLoadingFinished = true;

                // check for missing images/bins
                checkForMissing ();
            }
        }
    }
    httpRequest.open ("GET", "getfilebyextension.php?folder=slots/"+slotID+"&ext=mp4");
    httpRequest.send ();
}

// the loadBIN and loadImage functions can't really communicate with each other,
// so the checking is done here
function checkForMissing ()
{
    // don't check yet if everything hasn't finished loading
    if (!imageLoadingFinished || !payloadLoadingFinished)
        return;

    // this will be executed by whatever calls this function last
    else
    {
        var numberEmpty = 0;
        // for every slot
        for (var slotID = 1; slotID < 16; slotID++)
        {
            // if has bin, but no image
            if (!hasImage[slotID] && hasPayload[slotID])
            {
                document.getElementById (slotID).src = "images/no-icon.png";
                document.getElementById (slotID).style.visibility = "visible";

                document.getElementById("icon-" + slotID).style.backgroundImage = "url('images/icon-background.png')";
            }

            // if has image with no bin
            else if (hasImage[slotID] && !hasPayload[slotID])
            {
                document.getElementById ("icon-" + slotID).style.backgroundImage = "url('images/icon-empty-background.png')";
                // remove images
                document.getElementById (slotID).removeAttribute ("src");
                document.getElementById (slotID).style.visibility = "hidden";
                numberEmpty++;
            }

            else if (hasImage[slotID] && hasPayload[slotID])
                document.getElementById (slotID).style.visibility = "visible";

            else
            {
                document.getElementById (slotID).removeAttribute ("src");
                document.getElementById (slotID).style.visibility = "hidden";
            }
        }

        if (numberEmpty >= 15)
        {
            alert ("Welcome to Koopa's Browser BIN Launcher!\n" + 
                "To begin, create a 'slots' folder inside the same directory as index.html." + 
                "Inside that create a 1, 2, 3, and so on folder for each of the slots," + 
                "containing a png icon and a binary, with any name.");
        }
    }
    document.getElementById ("body").style.backgroundImage = "url('images/background.png')";
}